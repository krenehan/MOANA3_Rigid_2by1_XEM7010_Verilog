
// time scale
`timescale 1ns/1ps

// no undeclared nets
//`default_nettype none

module DigitalCore_PulseGenerator(
        
        //---------------------------------------------------------------------------
        //  ports
        //---------------------------------------------------------------------------
        rst,
        clk,
        in,
        out
        //---------------------------------------------------------------------------        

    );
    parameter PulseLength = 1;
    localparam FlopChainLength = PulseLength + 1;

    //-----------------------------------------------------------------------------------
    //   I/O Wires
    //-----------------------------------------------------------------------------------
    input wire                                  rst;
    input wire                                  clk;
    input wire                                  in;
    output wire                                 out;

	
    //-----------------------------------------------------------------------------------
    //  Genvars
    //-----------------------------------------------------------------------------------
    genvar i;
    //-----------------------------------------------------------------------------------
	
    //-----------------------------------------------------------------------------------
    //   Wires
    //-----------------------------------------------------------------------------------
    reg [FlopChainLength-1:0] in_delayed;

    //-----------------------------------------------------------------------------------

    //-----------------------------------------------------------------------------------
    //   Assigns
    //-----------------------------------------------------------------------------------
    assign out = in_delayed[0] & ~in_delayed[FlopChainLength-1];

    //-----------------------------------------------------------------------------------

    //-----------------------------------------------------------------------------------
    //    Input Flop
    //-----------------------------------------------------------------------------------
    always @(posedge clk or posedge rst) begin
        if (rst) begin
            in_delayed[0] <= 1'b0;
        end else begin
            in_delayed[0] <= in;
        end
    end
    
    //-----------------------------------------------------------------------------------
    //    Flop Chain
    //-----------------------------------------------------------------------------------
    generate for (i = 1; i < FlopChainLength; i = i + 1) begin: pulse_gen_flops
        always @(posedge clk or posedge rst) begin
            if (rst) begin 
                in_delayed[i] <= 1'b0;
            end else begin
                in_delayed[i] <= in_delayed[i-1];
            end
        end
    end endgenerate
    
    


endmodule

